"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const await_async_query_1 = __importDefault(require("./rules/await-async-query"));
const await_async_utils_1 = __importDefault(require("./rules/await-async-utils"));
const await_fire_event_1 = __importDefault(require("./rules/await-fire-event"));
const consistent_data_testid_1 = __importDefault(require("./rules/consistent-data-testid"));
const no_await_sync_events_1 = __importDefault(require("./rules/no-await-sync-events"));
const no_await_sync_query_1 = __importDefault(require("./rules/no-await-sync-query"));
const no_container_1 = __importDefault(require("./rules/no-container"));
const no_debug_1 = __importDefault(require("./rules/no-debug"));
const no_dom_import_1 = __importDefault(require("./rules/no-dom-import"));
const no_manual_cleanup_1 = __importDefault(require("./rules/no-manual-cleanup"));
const no_node_access_1 = __importDefault(require("./rules/no-node-access"));
const no_promise_in_fire_event_1 = __importDefault(require("./rules/no-promise-in-fire-event"));
const no_render_in_setup_1 = __importDefault(require("./rules/no-render-in-setup"));
const no_wait_for_empty_callback_1 = __importDefault(require("./rules/no-wait-for-empty-callback"));
const no_wait_for_snapshot_1 = __importDefault(require("./rules/no-wait-for-snapshot"));
const prefer_explicit_assert_1 = __importDefault(require("./rules/prefer-explicit-assert"));
const prefer_presence_queries_1 = __importDefault(require("./rules/prefer-presence-queries"));
const prefer_screen_queries_1 = __importDefault(require("./rules/prefer-screen-queries"));
const prefer_user_event_1 = __importDefault(require("./rules/prefer-user-event"));
const prefer_wait_for_1 = __importDefault(require("./rules/prefer-wait-for"));
const no_wait_for_multiple_assertions_1 = __importDefault(require("./rules/no-wait-for-multiple-assertions"));
const prefer_find_by_1 = __importDefault(require("./rules/prefer-find-by"));
const no_wait_for_side_effects_1 = __importDefault(require("./rules/no-wait-for-side-effects"));
const render_result_naming_convention_1 = __importDefault(require("./rules/render-result-naming-convention"));
const rules = {
    'await-async-query': await_async_query_1.default,
    'await-async-utils': await_async_utils_1.default,
    'await-fire-event': await_fire_event_1.default,
    'consistent-data-testid': consistent_data_testid_1.default,
    'no-await-sync-events': no_await_sync_events_1.default,
    'no-await-sync-query': no_await_sync_query_1.default,
    'no-container': no_container_1.default,
    'no-debug': no_debug_1.default,
    'no-dom-import': no_dom_import_1.default,
    'no-manual-cleanup': no_manual_cleanup_1.default,
    'no-node-access': no_node_access_1.default,
    'no-promise-in-fire-event': no_promise_in_fire_event_1.default,
    'no-render-in-setup': no_render_in_setup_1.default,
    'no-wait-for-empty-callback': no_wait_for_empty_callback_1.default,
    'no-wait-for-multiple-assertions': no_wait_for_multiple_assertions_1.default,
    'no-wait-for-side-effects': no_wait_for_side_effects_1.default,
    'no-wait-for-snapshot': no_wait_for_snapshot_1.default,
    'prefer-explicit-assert': prefer_explicit_assert_1.default,
    'prefer-find-by': prefer_find_by_1.default,
    'prefer-presence-queries': prefer_presence_queries_1.default,
    'prefer-screen-queries': prefer_screen_queries_1.default,
    'prefer-user-event': prefer_user_event_1.default,
    'prefer-wait-for': prefer_wait_for_1.default,
    'render-result-naming-convention': render_result_naming_convention_1.default,
};
const domRules = {
    'testing-library/await-async-query': 'error',
    'testing-library/await-async-utils': 'error',
    'testing-library/no-await-sync-query': 'error',
    'testing-library/no-promise-in-fire-event': 'error',
    'testing-library/no-wait-for-empty-callback': 'error',
    'testing-library/prefer-find-by': 'error',
    'testing-library/prefer-screen-queries': 'error',
};
const angularRules = Object.assign(Object.assign({}, domRules), { 'testing-library/no-container': 'error', 'testing-library/no-debug': 'error', 'testing-library/no-dom-import': ['error', 'angular'], 'testing-library/no-node-access': 'error', 'testing-library/render-result-naming-convention': 'error' });
const reactRules = Object.assign(Object.assign({}, domRules), { 'testing-library/no-container': 'error', 'testing-library/no-debug': 'error', 'testing-library/no-dom-import': ['error', 'react'], 'testing-library/no-node-access': 'error', 'testing-library/render-result-naming-convention': 'error' });
const vueRules = Object.assign(Object.assign({}, domRules), { 'testing-library/await-fire-event': 'error', 'testing-library/no-container': 'error', 'testing-library/no-debug': 'error', 'testing-library/no-dom-import': ['error', 'vue'], 'testing-library/no-node-access': 'error', 'testing-library/render-result-naming-convention': 'error' });
module.exports = {
    rules,
    configs: {
        dom: {
            plugins: ['testing-library'],
            rules: domRules,
        },
        angular: {
            plugins: ['testing-library'],
            rules: angularRules,
        },
        react: {
            plugins: ['testing-library'],
            rules: reactRules,
        },
        vue: {
            plugins: ['testing-library'],
            rules: vueRules,
        },
    },
};
